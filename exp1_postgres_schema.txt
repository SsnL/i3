// original

create table experiment1 (name varchar, status varchar, determinism integer, inversion_seconds float, learner varchar, max_inverse_size integer, num_training_samples integer, precompute_gibbs boolean, seed integer, start_time time, test_error float, test_proposals integer, test_proposals_accepted integer, test_seconds float, empirical_test_seconds float, training_error float, training_seconds float, training_source varchar, integrated_error float);

ALTER TABLE experiment1 ADD COLUMN id BIGSERIAL PRIMARY KEY;

// changed

CREATE USER inverse;
create database invert;

create table experiment1 (name varchar, status varchar, determinism integer, inversion_seconds float, learner varchar, max_inverse_size integer, num_training_samples_gibbs integer, num_training_samples_prior integer, precompute_gibbs boolean, seed integer, start_time time, num_test_iterations integer, test_errors float array, test_proposals integer, test_proposals_accepted integer, empirical_test_seconds float, training_error float, training_seconds float);

ALTER TABLE experiment1 ADD COLUMN id BIGSERIAL PRIMARY KEY;

create table experiment1_gibbs_runs (start_time time, seed integer, num_states integer, evidence_indices integer array, evidence_values integer array);
alter table experiment1_gibbs_runs ADD COLUMN id BIGSERIAL PRIMARY KEY;

create table experiment1_gibbs_data (gibbs_id integer references experiment1_gibbs_runs(id), state_id integer not null, time time, world_indices integer array, world_values integer array);
alter table experiment1_gibbs_data add primary key (gibbs_id, state_id);


grant all privileges on database invert to inverse;
